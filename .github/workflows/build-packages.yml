#file: noinspection SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection
name: Build Packages

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: environment
        default: 'default'
      logLevel:
        description: 'Log level'
        required: true
        type: choice
        options:
          - info
          - warning
          - debug
        default: 'warning'
      print_tags:
        description: 'Use stdout'
        required: true
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_BOT_TOKEN }}
      - name: Git Setup
        run: |
          git config --global user.name "${{ vars.GIT_BOT_USER }}"
          git config --global user.email "${{ vars.GIT_BOT_EMAIL }}"
      - name: Build Increment
        run: |
          BuildNb=$(grep "BuildNumber" version.go | awk '{print $4}')
          sed -i -e s/const\ BuildNumber\ =\ ${BuildNb}/const\ BuildNumber\ =\ $((${BuildNb}+1))/ version.go
      - name: Commit & Push
        run: |
          git commit -a -m "Continuous Integration"
          git push --force
  build:
    runs-on: ubuntu-latest
    steps:
    - name: CheckOut
      uses: actions/checkout@v3
    - name: Go Setup
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    - name: Go Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang
        restore-keys: |
          ${{ runner.os }}-golang
    - name: Update & Upgrade
      run: |
        sudo apt-get update
    - name: Fyne Framework
      run: |
        sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
        sudo apt-get install gcc-mingw-w64-x86-64
        go get fyne.io/fyne/v2
        go get github.com/fyne-io/fyne-cross@latest
        go install fyne.io/fyne/v2/cmd/fyne@latest
    - name: Text To Speech
      run: |
        sudo apt-get install libasound2-dev
        go get github.com/hajimehoshi/go-mp3
        go get github.com/hajimehoshi/oto/v2
    - name: Go Tidy
      run: |
        go mod tidy
    - name: Linux
      run: |
        fyne package -os linux -icon ./res/SyncTimer.icon.png
    - name: Android
      run: |
        export CGO_ENABLED=1
        export GOOS=android
        fyne package -os android -appID app.zwk.synctimer -icon ./res/SyncTimer.icon.png
    - name: Windows
      run: |
        export CC=/usr/bin/x86_64-w64-mingw32-gcc-win32
        export CGO_LDFLAGS="-static-libgcc -static"
        export CGO_ENABLED=1
        export GOOS=windows
        fyne package -os windows -icon ./res/SyncTimer.icon.png
    - name: Summary
      run: |
        chmod +x summary.sh
        ./summary.sh
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: SyncTimer
        path: |
          SyncTimer.*
        retention-days: 5
