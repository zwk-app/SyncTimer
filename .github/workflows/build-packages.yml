# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Packages

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: CheckOut
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GIT_BOT_TOKEN }}

    - name: Build Number
      if: ${{ github.actor != env.GIT_BOT_USER }}
      run: |
        echo -e "\033[0;35m--- Git Setup ---\033[0m"
        git config --global user.name "${{ vars.GIT_BOT_USER }}"
        git config --global user.email "${{ vars.GIT_BOT_EMAIL }}"
        echo -e "\033[0;35m--- Increment Build Number ---\033[0m"
        BuildNb=$(grep "BuildNumber" version.go | awk '{print $4}')
        sed -i -e s/const\ BuildNumber\ =\ ${BuildNb}/const\ BuildNumber\ =\ $((${BuildNb}+1))/ version.go
        echo -e "\033[0;35m--- Commit & Push ---\033[0m"
        git commit -a -m "Continuous Integration"
        git push --force

    - name: Go Setup
      if: ${{ github.actor == env.GIT_BOT_USER }}
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Go Cache
      if: ${{ github.actor == env.GIT_BOT_USER }}
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang
        restore-keys: |
          ${{ runner.os }}-golang

    - name: Dependencies & Tools
      if: ${{ github.actor == env.GIT_BOT_USER }}
      run: |
        echo -e "\033[0;35m--- Update & Upgrade ---\033[0m"
        sudo apt-get update
        echo -e "\033[0;35m--- Fyne Framework ---\033[0m"
        sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
        go get fyne.io/fyne/v2
        echo -e "\033[0;35m--- Text To Speech ---\033[0m"
        sudo apt-get install libasound2-dev
        go get github.com/hajimehoshi/go-mp3
        go get github.com/hajimehoshi/oto/v2
        echo -e "\033[0;35m--- Tidy Go mods ---\033[0m"
        go mod tidy
        echo -e "\033[0;35m--- Package Tools ---\033[0m"
        go install fyne.io/fyne/v2/cmd/fyne@latest
        echo -e "\033[0;35m--- Cross Compile Tools ---\033[0m"
        sudo apt-get install gcc-mingw-w64-x86-64
        go get github.com/fyne-io/fyne-cross@latest

    - name: Build
      if: ${{ github.actor == env.GIT_BOT_USER }}
      run: |
        echo -e "\033[0;35m--- Linux ---\033[0m"
        fyne package -os linux -icon ./res/SyncTimer.icon.png
        echo -e "\033[0;35m--- Android ---\033[0m"
        export CGO_ENABLED=1
        export GOOS=android
        fyne package -os android -appID app.zwk.synctimer -icon ./res/SyncTimer.icon.png
        echo -e "\033[0;35m--- Windows ---\033[0m"
        export CC=/usr/bin/x86_64-w64-mingw32-gcc-win32
        export CGO_LDFLAGS="-static-libgcc -static"
        export CGO_ENABLED=1
        export GOOS=windows
        fyne package -os windows -icon ./res/SyncTimer.icon.png
        echo -e "\033[0;35m--- Summary ---\033[0m"
        chmod +x summary.sh
        ./summary.sh

    - name: Upload
      if: ${{ github.actor != 'GitHub' }}
      uses: actions/upload-artifact@v3
      with:
        name: SyncTimer
        path: |
          SyncTimer.*
        retention-days: 5
