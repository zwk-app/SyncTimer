#file: noinspection SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection
name: Build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: environment
        default: 'default'
      logLevel:
        description: 'Log level'
        required: true
        type: choice
        options:
          - info
          - warning
          - debug
        default: 'warning'
      print_tags:
        description: 'Use stdout'
        required: true
        type: boolean
        default: true
      newRelease:
        description: 'Create Release'
        required: true
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v4
      - name: Go Setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang
          restore-keys: |
            ${{ runner.os }}-golang
      - name: Requirements
        run: |
          chmod +x github.sh
          ./github.sh build-requirements
          ./github.sh github-environment
      - name: Linux
        run: |
          chmod +x github.sh
          ./github.sh package linux
      - name: Android
        run: |
          chmod +x github.sh
          ./github.sh package android
      - name: Windows
        run: |
          chmod +x github.sh
          ./github.sh package windows
      - name: Summary
        run: |
          chmod +x github.sh
          ./github.sh build-summary
      - name: Release
        if: "${{ inputs.newRelease }}"
        uses: "actions/github-script@v7.0.1"
        with:
          github-token: "${{ secrets.GIT_BOT_TOKEN }}"
          script: |
            if (!process.env.RELEASE_NAME) {
              core.setFailed("The environment variable RELEASE_TAG is not defined.")
              return;
            }
            try {
              const response = await github.rest.repos.createRelease({
                draft: true,
                generate_release_notes: true,
                name: process.env.RELEASE_NAME,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: SyncTimer
          path: |
            SyncTimer.*
          retention-days: 3

  build-increment:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_BOT_TOKEN }}
      - name: Git Setup
        run: |
          git config --global user.name "${{ vars.GIT_BOT_USER }}"
          git config --global user.email "${{ vars.GIT_BOT_EMAIL }}"
      - name: Build Increment
        run: |
          chmod +x github.sh
          ./github.sh build-increment
      - name: Commit & Push
        run: |
          git commit -a -m "Continuous Integration"
          git push --force
